#
# Server version: Apache/2.4.62 (Win64)
# Apache Lounge VS17 Server built:   Sep  4 2024 10:31:52
#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.4> for detailed information.
# In particular, see
# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to C:\MAMP\bin\apache will be interpreted by the
# server as C:\MAMP\bin\apache.
#
# NOTE: Where filenames are specified, you must use forward slashes
# instead of backslashes (e.g., "c:/apache" instead of "c:\apache").
# If a drive letter is omitted, the drive on which httpd.exe is located
# will be used by default.  It is recommended that you always supply
# an explicit drive letter in absolute paths to avoid confusion.
#

#
# Define: Used to define variables that can be referenced later in the
# configuration file. This helps in setting up reusable configuration values.
# Example usage: Define SERVER_NAME "localhost"
#

# Windows
# Define SERVER_ROOT "D:/Meus Projetos/conversor-para-binario/server"

# Windows
# Define VIRTUAL_HOST_DOCUMENT_ROOT "D:/Meus Projetos/conversor-para-binario/projeto"

# Linux
# Define SERVER_ROOT ${APACHE_RUN_DIR}
Define SERVER_ROOT "/etc/apache2"
# Linux
Define VIRTUAL_HOST_DOCUMENT_ROOT "/var/www/converter"

Define VIRTUAL_HOST_LOGS "/var/lib/converter/logs"

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
ServerRoot ${SERVER_ROOT}

# Include list of ports to listen on
Include ports.conf

# Include module configuration:
IncludeOptional mods-enabled/*.load
IncludeOptional mods-enabled/*.conf

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# LoadModule foo_module modules/mod_foo.so
#
# Additional libraries
#

#
# authz_core_module:
#
# This module provides access control and authorization functionalities
# in the Apache server. It allows you to define access rules based on
# conditions such as the client's IP address or user authentication.
# This module is essential for managing who can or cannot access specific
# resources on your server, using directives like Require, Allow, and Deny.
#
# LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so

# LoadModule php_module  /usr/lib/apache2/modules/libphp.so

# Linux
# LoadModule mpm_event_module /usr/lib/apache2/modules/mod_mpm_event.so

# Linux
# LoadModule mpm_prefork_module modules/mod_mpm_prefork.so

# Linux
# LoadModule mpm_worker_module /usr/lib/apache2/modules/mod_mpm_worker.so


#
# autoindex_module:
#
# This module enables automatic generation of a directory listing
# when a directory is accessed without an index file (like index.html
# or index.php). When enabled, it creates a page displaying all the
# files and subdirectories contained in the accessed directory,
# facilitating navigation in environments where file access is necessary,
# such as in development or file-sharing servers.
#
# LoadModule autoindex_module modules/mod_autoindex.so

#
# dir_module:
#
# This module is responsible for configuring the order in which
# Apache looks for index files in a directory. When a client accesses
# a directory, this module checks for the presence of files that should
# be treated as indexes (e.g., index.html, index.php, etc.). If a valid
# index file is found, it is served to the client; otherwise, the directory
# listing may be displayed (if the autoindex module is enabled).
#
# LoadModule dir_module modules/mod_dir.so

#
# cgi_module:
#
# This module enables support for CGI (Common Gateway Interface)
# scripts in the Apache server. This allows Apache to execute external
# scripts and process dynamic requests, enabling the creation of
# interactive web applications. Scripts written in various programming
# languages (such as Perl, Python, or Bash) can be used to generate
# dynamic content in response to HTTP requests. The module must be
# configured to specify where the CGI scripts are located and the
# permissions required for their execution.
#
# LoadModule cgi_module modules/mod_cgi.so // TODO: Verificar

# LoadModule log_config_module modules/mod_log_config.so // TODO: Verificar

# LoadModule logio_module modules/mod_logio.so // TODO: Verificar

# LoadModule access_compat_module modules/mod_access_compat.so

# LoadModule alias_module modules/mod_alias.so

# Windows
# LoadModule mime_module D:/Apache24/modules/mod_mime.so

# Linux
# LoadModule mime_module modules/mod_mime.so

# Windows
# LoadModule mime_magic_module D:/Apache24/modules/mod_mime_magic.so

# Linux
# LoadModule mime_magic_module modules/mod_mime_magic.so

# Linux
#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
<IfModule mime_magic_module>
    MIMEMagicFile /etc/apache2/magic
</IfModule>

# # LoadFile "C:/MAMP/bin/apache/bin/perl516.dll"
# # LoadFile "C:/MAMP/bin/apache/bin/python27.dll"
# # LoadModule actions_module modules/mod_actions.so
# # LoadModule asis_module modules/mod_asis.so
# # LoadModule auth_basic_module modules/mod_auth_basic.so
# # LoadModule auth_digest_module modules/mod_auth_digest.so
# # LoadModule authn_anon_module modules/mod_authn_anon.so
# # LoadModule authn_dbd_module modules/mod_authn_dbd.so
# # LoadModule authn_dbm_module modules/mod_authn_dbm.so
# # LoadModule authn_file_module modules/mod_authn_file.so
# # LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
# # LoadModule authz_dbm_module modules/mod_authz_dbm.so
# # LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
# # LoadModule authz_host_module modules/mod_authz_host.so
# # LoadModule authz_owner_module modules/mod_authz_owner.so
# # LoadModule authz_user_module modules/mod_authz_user.so
# # LoadModule cache_module modules/mod_cache.so
# # LoadModule cern_meta_module modules/mod_cern_meta.so
# # LoadModule charset_lite_module modules/mod_charset_lite.so
# # LoadModule dav_module modules/mod_dav.so
# # LoadModule dav_fs_module modules/mod_dav_fs.so
# # LoadModule dav_lock_module modules/mod_dav_lock.so
# # LoadModule dbd_module modules/mod_dbd.so
# # LoadModule deflate_module modules/mod_deflate.so
# # LoadModule dumpio_module modules/mod_dumpio.so
# # LoadModule env_module modules/mod_env.so
# # LoadModule expires_module modules/mod_expires.so
# # LoadModule ext_filter_module modules/mod_ext_filter.so
# # LoadModule file_cache_module modules/mod_file_cache.so
# # LoadModule filter_module modules/mod_filter.so
# # LoadModule headers_module modules/mod_headers.so
# # LoadModule ident_module modules/mod_ident.so
# # LoadModule imagemap_module modules/mod_imagemap.so
# # LoadModule include_module modules/mod_include.so
# # LoadModule info_module modules/mod_info.so
# # LoadModule isapi_module modules/mod_isapi.so
# # LoadModule ldap_module modules/mod_ldap.so
# # LoadModule log_forensic_module modules/mod_log_forensic.so
# # LoadModule negotiation_module modules/mod_negotiation.so
# # LoadModule proxy_module modules/mod_proxy.so
# # LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
# # LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
# # LoadModule proxy_connect_module modules/mod_proxy_connect.so
# # LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
# # LoadModule proxy_http_module modules/mod_proxy_http.so
# # LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
# # LoadModule reqtimeout_module modules/mod_reqtimeout.so
# # LoadModule rewrite_module modules/mod_rewrite.so
# # LoadModule setenvif_module modules/mod_setenvif.so
# # LoadModule speling_module modules/mod_speling.so
# # LoadModule ssl_module modules/mod_ssl.so
# # LoadModule status_module modules/mod_status.so
# # LoadModule substitute_module modules/mod_substitute.so
# # LoadModule unique_id_module modules/mod_unique_id.so
# # LoadModule userdir_module modules/mod_userdir.so
# # LoadModule usertrack_module modules/mod_usertrack.so
# # LoadModule version_module modules/mod_version.so
# # LoadModule vhost_alias_module modules/mod_vhost_alias.so
# # LoadModule fcgid_module modules/mod_fcgid.so
# # LoadModule wsgi_module modules/mod_wsgi.so
# # LoadModule perl_module modules/mod_perl.so

# # LoadModule allowmethods_module modules/mod_allowmethods.so
# # LoadModule auth_form_module modules/mod_auth_form.so
# # LoadModule authn_core_module modules/mod_authn_core.so
# # LoadModule authn_socache_module modules/mod_authn_socache.so
# # LoadModule authnz_fcgi_module modules/mod_authnz_fcgi.so
# # LoadModule authz_dbd_module modules/mod_authz_dbd.so
# # LoadModule buffer_module modules/mod_buffer.so
# # LoadModule cache_disk_module modules/mod_cache_disk.so
# # LoadModule cache_socache_module modules/mod_cache_socache.so
# # LoadModule data_module modules/mod_data.so
# # LoadModule heartbeat_module modules/mod_heartbeat.so
# # LoadModule heartmonitor_module modules/mod_heartmonitor.so
# # LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so
# # LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
# # LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so
# # LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so
# # LoadModule log_debug_module modules/mod_log_debug.so
# # LoadModule macro_module modules/mod_macro.so
# # LoadModule proxy_express_module modules/mod_proxy_express.so
# # LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
# # LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so
# # LoadModule proxy_uwsgi_module modules/mod_proxy_uwsgi.so
# # LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
# # LoadModule ratelimit_module modules/mod_ratelimit.so
# # LoadModule reflector_module modules/mod_reflector.so
# # LoadModule remoteip_module modules/mod_remoteip.so
# # LoadModule request_module modules/mod_request.so
# # LoadModule sed_module modules/mod_sed.so
# # LoadModule session_module modules/mod_session.so
# # LoadModule session_cookie_module modules/mod_session_cookie.so
# # LoadModule session_dbd_module modules/mod_session_dbd.so
# # LoadModule slotmem_plain_module modules/mod_slotmem_plain.so
# # LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
# # LoadModule socache_dbm_module modules/mod_socache_dbm.so
# # LoadModule socache_memcache_module modules/mod_socache_memcache.so
# # LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
# # LoadModule watchdog_module modules/mod_watchdog.so
# #

# #
# # PidFile: The file in which the server should record its process
# # identification number when it starts.
# #
# # PidFile: Defines the path to the file where Apache should record the process
# # identification number (PID) of the main server when it starts. The PID number is
# # important for server management, allowing administrative tools or scripts to
# # identify, stop, or restart the Apache process properly.
# #
# # In this example, the PID file will be created in the "logs" directory with the name
# # "httpd.pid". If ServerRoot is set to "C:/Apache24", the full path would be
# # "C:/Apache24/logs/httpd.pid".
# #
# # The <IfModule !mpm_netware.c> block ensures that this directive is only applied
# # if the "mpm_netware.c" module is NOT loaded. "mpm_netware.c" is a Multi-Processing
# # Module (MPM) specific to NetWare systems, so this configuration is only relevant
# # for systems that do not use this specific module.
# #
# # This configuration is important to ensure that Apache can be managed
# # correctly, especially on systems that do not use NetWare.
# #
<IfModule !mpm_netware.c>
    PidFile logs/httpd.pid
</IfModule>

<IfModule !mpm_netware_module>
    <IfModule !mpm_winnt_module>
        #
        # If you wish httpd to run as a different user or group, you must run
        # httpd as root initially and it will switch.
        #
        # User/Group: The name (or #number) of the user/group to run httpd as.
        # It is usually good practice to create a dedicated user and group for
        # running httpd, as with most system services.
        #
        User daemon
        Group daemon
    </IfModule>
</IfModule>

#
# Each directory to which Apache has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories).
#
# First, we configure the "default" to be a very restrictive set of
# features.
#
<Directory />
    Options FollowSymLinks Includes
    AllowOverride None
	Require all denied
</Directory>

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to
# prevent Apache from glomming onto all bound IP addresses.
#
# Listen: Specifies the IP addresses and/or ports that Apache will listen on
# for incoming connections. By default, Apache listens on port 80 for all
# available IP addresses on the server.
#
# You can change this to bind Apache to specific IP addresses and ports
# to limit which interfaces it will listen on and to prevent Apache from
# automatically binding to all available IP addresses.
#
# Example usage:
# - Listen 80: Apache will listen on all IP addresses on port 80.
# - Listen 127.0.0.1:80: Apache will listen only on the localhost interface.
# - Listen 192.168.1.100:8080: Apache will listen on the specified IP and port.
#
# Listen 8001

#
# VirtualHost: The VirtualHost directive allows you to host multiple websites on a single server.
# This is useful for serving different content or domains from the same machine.
#
# Basic Setup:
# - <VirtualHost *:80>: Defines a virtual host that listens on all IP addresses on port 80.
# - ServerName: Specifies the primary domain name for the virtual host.
# - ServerAlias: Lists alternative domain names or subdomains.
# - DocumentRoot: Indicates the directory from which content will be served.
#
# Directory Options:
# - Options Indexes FollowSymLinks: Configures the features enabled for the directory.
# - AllowOverride All: Allows the use of .htaccess files to override configurations.
# - Require all granted: Grants access permissions to all clients.
#
# Each <VirtualHost> block can have custom configurations for error logs, access logs,
# and security settings, allowing flexibility and isolation for different websites.

# Example:
# <VirtualHost *:80>
#     ServerName example.com
#     ServerAlias www.example.com
#     DocumentRoot "C:/path/to/your/project"
#     <Directory "C:/path/to/your/project">
#         Options Indexes FollowSymLinks
#         AllowOverride All
#         Require all granted
#     </Directory>
# </VirtualHost>
#
# <VirtualHost *:8001>
#     ServerName apache
#     DocumentRoot "${VIRTUAL_HOST_DOCUMENT_ROOT}"

#     <Directory />

#         #
#         # Indexes - If a URL which maps to a directory is requested and there is no
#         # DirectoryIndex (e.g., index.html) in that directory, then mod_autoindex
#         # will return a formatted listing of the directory.
#         #
#         Options Indexes Includes FollowSymLinks ExecCGI
#         AllowOverride All
#         Require all granted
#     </Directory>

#     #
#     # The location and format of the access logfile (Common Logfile Format).
#     # If you do not define any access logfiles within a <VirtualHost>
#     # container, they will be logged here.  Contrariwise, if you *do*
#     # define per-<VirtualHost> access logfiles, transactions will be
#     # logged therein and *not* in this file.
#     #
#     CustomLog "${VIRTUAL_HOST_LOGS}/all.log" vhost_combined

#     # ErrorLog "{VIRTUAL_HOST_LOGS}/error.log"

#     ErrorDocument 404 /404.html



#     Alias /php "${VIRTUAL_HOST_DOCUMENT_ROOT}/cgi-bin/php/"

#     #
#     # "/cgi-bin" should be changed to whatever your ScriptAliased
#     # CGI directory exists, if you have that configured.
#     #
#     <Directory "${VIRTUAL_HOST_DOCUMENT_ROOT}/cgi-bin/">
#         AllowOverride None
#         Options None
#         # Order allow,deny
#         # Allow from all
#         # Deny from all
#         Require all denied

#         <FilesMatch ".php$">
#             Require all granted
#         </FilesMatch>

#     </Directory>
# </VirtualHost>

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin maykondias2001@gmail.com

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
ServerName server

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "${SERVER_ROOT}"

# #
# # DirectoryIndex: sets the file that Apache will serve if a directory
# # is requested.
# #
<IfModule dir_module>
    DirectoryIndex index.html index.php
	<IfModule perl_module>
        DirectoryIndex index.pl
    </IfModule>
    <IfModule wsgi_module>
        DirectoryIndex index.wsgi index.py
    </IfModule>
</IfModule>

#
# AccessFileName: The name of the file to look for in each directory
# for additional configuration directives.  See also the AllowOverride
# directive.
#
AccessFileName .htaccess

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<FilesMatch "^\.ht">
	Require all denied
</FilesMatch>

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel debug info notice warn error crit alert emerg

# ServerTokens
# This directive configures what you return as the Server HTTP response
# Header. The default is 'Full' which sends information about the OS-Type
# and compiled in modules.
# Set to one of:  Full | OS | Minor | Minimal | Major | Prod
# where Full conveys the most information, and Prod the least.
#
ServerTokens Full

#
# Optionally add a line containing the server version and virtual host
# name to server-generated pages (internal error documents, FTP directory
# listings, mod_status and mod_info output etc., but not CGI generated
# documents or custom error documents).
# Set to "EMail" to also include a mailto: link to the ServerAdmin.
# Set to one of:  On | Off | EMail
#
ServerSignature EMail

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    # CustomLog "logs/server/error.log" common

</IfModule>

# ErrorLog "server.log"

# Alias /php "${SERVER_ROOT}/cgi-bin/php/"

#
# "/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
# <Directory "${SERVER_ROOT}/cgi-bin/php/">
#     AllowOverride None
#     Options None
#     # Order allow,deny
#     # Allow from all
#     # Deny from all
#     Require all denied

#     <FilesMatch ".php$">
#         Require all granted
#     </FilesMatch>

# </Directory>

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    # TypesConfig D:/Apache24/conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    AddEncoding x-compress .Z
    AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    AddType application/x-httpd-php .php
    AddType application/x-httpd-php .phtml

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    AddHandler cgi-script .cgi .pl
	AddHandler cgi-script .cgi .py

    AddHandler cgi-script .cgi .pl
    AddHandler wsgi-script .wsgi .py

    # For type maps (negotiated resources):
    AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    # AddType text/html .shtml
    # AddOutputFilter INCLUDES .shtml
</IfModule>

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 ./404.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.test.com/subscription_info.html
#

# Linux
# PHPIniDir "/etc/php83/php.ini"
# LoadModule php_module modules/mod_php83.so
# LoadFile "D:/php/libssh2.dll"
# LoadFile "D:/php/nghttp2.dll"
# LoadFile "D:/php/libsqlite3.dll"
# LoadFile "D:/php/libsodium.dll"

# Windows
# PHPIniDir "D:\php\php.ini"
# LoadModule php_module "D:\php\php8apache2_4.dll"
# LoadFile "D:/php/libssh2.dll"
# LoadFile "D:/php/nghttp2.dll"
# LoadFile "D:/php/libsqlite3.dll"
# LoadFile "D:/php/libsodium.dll"


# This is the main Apache server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See http://httpd.apache.org/docs/2.4/ for detailed information about
# the directives and /usr/share/doc/apache2/README.Debian about Debian specific
# hints.
#
#
# Summary of how the Apache 2 configuration works in Debian:
# The Apache 2 web server configuration in Debian is quite different to
# upstream's suggested way to configure the web server. This is because Debian's
# default Apache2 installation attempts to make adding and removing modules,
# virtual hosts, and extra configuration directives as flexible as possible, in
# order to make automating the changes and administering the server as easy as
# possible.

# It is split into several files forming the configuration hierarchy outlined
# below, all located in the /etc/apache2/ directory:
#
#	/etc/apache2/
#	|-- apache2.conf
#	|	`--  ports.conf
#	|-- mods-enabled
#	|	|-- *.load
#	|	`-- *.conf
#	|-- conf-enabled
#	|	`-- *.conf
# 	`-- sites-enabled
#	 	`-- *.conf
#
#
# * apache2.conf is the main configuration file (this file). It puts the pieces
#   together by including all remaining configuration files when starting up the
#   web server.
#
# * ports.conf is always included from the main configuration file. It is
#   supposed to determine listening ports for incoming connections which can be
#   customized anytime.
#
# * Configuration files in the mods-enabled/, conf-enabled/ and sites-enabled/
#   directories contain particular configuration snippets which manage modules,
#   global configuration fragments, or virtual host configurations,
#   respectively.
#
#   They are activated by symlinking available configuration files from their
#   respective *-available/ counterparts. These should be managed by using our
#   helpers a2enmod/a2dismod, a2ensite/a2dissite and a2enconf/a2disconf. See
#   their respective man pages for detailed information.
#
# * The binary is called apache2. Due to the use of environment variables, in
#   the default configuration, apache2 needs to be started/stopped with
#   /etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not
#   work with the default configuration.


# Global configuration
#

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# NOTE!  If you intend to place this on an NFS (or otherwise network)
# mounted filesystem then please read the Mutex documentation (available
# at <URL:http://httpd.apache.org/docs/2.4/mod/core.html#mutex>);
# you will save yourself a lot of trouble.
#
# Do NOT add a slash at the end of the directory path.
#
# ServerRoot "/etc/apache2"

#
# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
#
#Mutex file:${APACHE_LOCK_DIR} default

#
# The directory where shm and other runtime files will be stored.
#

DefaultRuntimeDir ${APACHE_RUN_DIR}

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
# This needs to be set in /etc/apache2/envvars
#
PidFile ${APACHE_PID_FILE}

#
# Timeout: The number of seconds before receives and sends time out.
#
Timeout 300

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive On

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests 100

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout 5


# These need to be set in /etc/apache2/envvars
User ${APACHE_RUN_USER}
Group ${APACHE_RUN_GROUP}

#
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., www.apache.org (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
#
HostnameLookups Off

# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog ${APACHE_LOG_DIR}/error.log

#
# LogLevel: Control the severity of messages logged to the error_log.
# Available values: trace8, ..., trace1, debug, info, notice, warn,
# error, crit, alert, emerg.
# It is also possible to configure the log level for particular modules, e.g.
# "LogLevel info ssl:warn"
#
# LogLevel warn

# Include module configuration:
# IncludeOptional mods-enabled/*.load
# IncludeOptional mods-enabled/*.conf

# Include list of ports to listen on
# Include ports.conf


# Sets the default security model of the Apache2 HTTPD server. It does
# not allow access to the root filesystem outside of /usr/share and /var/www.
# The former is used by web applications packaged in Debian,
# the latter may be used for local directories served by the web server. If
# your system is serving content from a sub-directory in /srv you must allow
# access here, or in any related virtual host.
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Require all denied
</Directory>

<Directory /usr/share>
	AllowOverride None
	Require all granted
</Directory>

<Directory /var/www/>
	Options Indexes FollowSymLinks
	AllowOverride None
	Require all granted
</Directory>

#<Directory /srv/>
#	Options Indexes FollowSymLinks
#	AllowOverride None
#	Require all granted
#</Directory>




# AccessFileName: The name of the file to look for in each directory
# for additional configuration directives.  See also the AllowOverride
# directive.
#
# AccessFileName .htaccess

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
# <FilesMatch "^\.ht">
# 	Require all denied
# </FilesMatch>


#
# The following directives define some format nicknames for use with
# a CustomLog directive.
#
# These deviate from the Common Log Format definitions in that they use %O
# (the actual bytes sent including headers) instead of %b (the size of the
# requested file), because the latter makes it impossible to detect partial
# requests.
#
# Note that the use of %{X-Forwarded-For}i instead of %h is not recommended.
# Use mod_remoteip instead.
#
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %O" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

# Include of directories ignores editors' and dpkg's backup files,
# see README.Debian for details.

# Include generic snippets of statements
IncludeOptional conf-enabled/*.conf

# Include the virtual host configurations:
IncludeOptional sites-enabled/*.conf
